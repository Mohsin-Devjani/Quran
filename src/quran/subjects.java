/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package quran;

import java.awt.Color;
import java.awt.ComponentOrientation;
import java.awt.Font;
import java.awt.Toolkit;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.Queue;
import java.util.Vector;
import javax.swing.DefaultListModel;
import javax.swing.text.DefaultHighlighter;
import javax.swing.text.Highlighter;
import javax.swing.text.JTextComponent;


public class subjects extends javax.swing.JFrame {

   SurahNames s= new SurahNames();
String names[]=s.names;
    public subjects() {
         this.setDefaultCloseOperation(this.EXIT_ON_CLOSE);
        this.setAlwaysOnTop(true);
        this.setResizable(true);
        this.setVisible(true);
        initComponents();
        Toolkit tk= Toolkit.getDefaultToolkit();
        int xsize=(int) tk.getScreenSize().getWidth();
        int ysize= (int)tk.getScreenSize().getHeight();
        this.setSize(xsize,ysize);
                 Font font = new Font("Arabic Typesetting", Font.PLAIN, 24);
        SurahDisplay.setFont(font);
            SurahDisplay.setComponentOrientation(ComponentOrientation.LEFT_TO_RIGHT);                        
            SurahDisplay.setText("");
            SurahDisplay.setLineWrap(true);
            SurahDisplay.setWrapStyleWord(true);
            SurahDisplay.setEditable(false);
    this.sub();
   
      
    }
    class MyHighlightPainter extends DefaultHighlighter.DefaultHighlightPainter{
        public MyHighlightPainter(Color color){
            super(color);
        }
     }
        Highlighter.HighlightPainter myHighlightPainter= new MyHighlightPainter(Color.YELLOW);
        public void Highligh(JTextComponent textComp, String pattern){
            try{
                Highlighter hilite=textComp.getHighlighter();
                String text=SurahDisplay.getText();
                int pos=0;
                while((pos=text.toUpperCase().indexOf(pattern.toUpperCase(),pos))>=0){
                    hilite.addHighlight(pos, pos+pattern.length(), myHighlightPainter);
                    pos+=pattern.length();
                }
            }
            catch(Exception e){
                
            }
        }
    

public void sub(){
    Trie t=new Trie();
     DefaultListModel<String> model = new DefaultListModel<>(); 
    t.doInsertion();
    String line="";
    try {
            File file = new File(("topics.txt"));
            BufferedReader bf = new BufferedReader(new InputStreamReader(new FileInputStream(file))); 
            line=(String)bf.readLine();
            
          
            while((line=(String)bf.readLine()) != null){
                line=line.replaceAll("[0-9]", "");
            line=line.toLowerCase();
              Queue<String> q=t.search(line);
            if(q!=null){
           model.addElement(line);
            }

            }
            topic.setModel(model);
    }
    catch(IOException e){
        System.out.println("file nahe mili");
    }
}
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        topic = new javax.swing.JList();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        SurahDisplay = new javax.swing.JTextArea();
        button = new javax.swing.JButton();
        occur = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        BACK = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(null);

        topic.setBackground(new java.awt.Color(240, 240, 240));
        topic.setBorder(new javax.swing.border.MatteBorder(null));
        topic.setFont(new java.awt.Font("Segoe Print", 1, 18)); // NOI18N
        topic.setForeground(new java.awt.Color(0, 51, 102));
        jScrollPane1.setViewportView(topic);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(30, 60, 250, 680);

        jLabel2.setFont(new java.awt.Font("Kinnari", 3, 48)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(249, 239, 239));
        jLabel2.setText("Topics In Quran");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(630, 50, 470, 60);

        SurahDisplay.setColumns(20);
        SurahDisplay.setFont(new java.awt.Font("Century Schoolbook L", 2, 18)); // NOI18N
        SurahDisplay.setForeground(new java.awt.Color(0, 51, 102));
        SurahDisplay.setRows(5);
        jScrollPane2.setViewportView(SurahDisplay);

        getContentPane().add(jScrollPane2);
        jScrollPane2.setBounds(300, 160, 940, 560);

        button.setBackground(new java.awt.Color(244, 236, 236));
        button.setFont(new java.awt.Font("Segoe Print", 1, 18)); // NOI18N
        button.setForeground(new java.awt.Color(0, 0, 102));
        button.setText("Topic Selected");
        button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonActionPerformed(evt);
            }
        });
        getContentPane().add(button);
        button.setBounds(350, 70, 190, 34);

        occur.setFont(new java.awt.Font("Bitstream Charter", 1, 24)); // NOI18N
        occur.setForeground(new java.awt.Color(255, 255, 204));
        getContentPane().add(occur);
        occur.setBounds(370, 110, 800, 60);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/quran/desktopwallpapers.org.ua-6378.jpg"))); // NOI18N
        getContentPane().add(jLabel1);
        jLabel1.setBounds(0, 0, 1010, 990);

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/quran/desktopwallpapers.org.ua-6378.jpg"))); // NOI18N
        jLabel3.setText("jLabel3");
        getContentPane().add(jLabel3);
        jLabel3.setBounds(970, 170, 1100, 660);

        BACK.setBackground(new java.awt.Color(253, 243, 243));
        BACK.setFont(new java.awt.Font("Ubuntu", 1, 14)); // NOI18N
        BACK.setForeground(new java.awt.Color(0, 0, 102));
        BACK.setText("Back");
        BACK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BACKActionPerformed(evt);
            }
        });
        getContentPane().add(BACK);
        BACK.setBounds(1110, 20, 150, 40);

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/quran/desktopwallpapers.org.ua-6378.jpg"))); // NOI18N
        jLabel4.setText("jLabel4");
        getContentPane().add(jLabel4);
        jLabel4.setBounds(1010, 0, 780, 170);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonActionPerformed
     
        String str=topic.getSelectedValue().toString();
        
       Trie t=new Trie();
t.doInsertion();

Queue<String> q= t.search(str);
SurahDisplay.setText("");
if(q!=null){
  Object row[]=q.toArray();
  DefaultListModel<String> model = new DefaultListModel<>();
 
for ( int i = 0; i < row.length-1; i++ ){
    String k=row[i].toString().substring(1, row[i].toString().length()-1);
   String[] j=k.split("\\:");
   int ja=Integer.parseInt(j[0]);
   int jb=Integer.parseInt(j[1]);
  eachAyah(ja,jb,row[i].toString());
}

SurahDisplay.setCaretPosition(0);
String so="This Word Occurs " + row[row.length-1].toString() + " times in Quran";
occur.setText(so);
Highligh(SurahDisplay,str);
}
else{
    occur.setText("This word does not occur in Quran");
    
}

}
   public void eachAyah(int ja, int jb, String ind){
   try {            
           String FileName=names[ja-1]+".txt";
         //  panel.setVisible(true);
                File file = new File((FileName));
                BufferedReader bf = new BufferedReader(new InputStreamReader(new FileInputStream(file), "UTF-8"));
                String read=(String)bf.readLine();
                int g=0; int d=1+(jb*2);
                 while (g<d) {
                     bf.readLine();
                     g++;
                 }
                 String read2;
                     while ((read=(String)bf.readLine()) != null) {                         
                         String word[]=read.split(" ");                        
                         if(word[0].equals(ind)){                             
                    SurahDisplay.append(read+"\n");                  
            }
                     }
                  bf.close();       }
                     

 catch(IOException e){
            System.out.println("file nahi mili"+ e.getMessage());
        }     
   


    }//GEN-LAST:event_buttonActionPerformed

    private void BACKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BACKActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
        new menuPage().setVisible(true);
    }//GEN-LAST:event_BACKActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(subjects.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(subjects.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(subjects.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(subjects.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new subjects().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BACK;
    private javax.swing.JTextArea SurahDisplay;
    private javax.swing.JButton button;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel occur;
    private javax.swing.JList topic;
    // End of variables declaration//GEN-END:variables
}
